{
  "header": {
    "home": "Главная",
    "about": "Обо мне",
    "skills": "Навыки",
    "portfolio": "Портфолио",
    "contacts": "Контакты"
  },
  "main": {
    "home": {
      "name": "Максим Бекиш",
      "about": "Разработка фронтенда 26 лет , Минск"
    },
    "about": {
      "a": "Я обучаюсь в SF на курсе 'FrontEnd Pro'.",
      "b": "В свободное время вместе с командой реализуем свой проект.",
      "c": "Мне интересно создание веб-приложений с использованием JavaScript/TypeScript и React.",
      "d": "Я коммуникабелен, стремлюсь к постоянному развитию и адаптируюсь к новым технологиям.",
      "e": "Готов брать на себя ответственность и способствовать развитию проектов и компаний."
    },
    "portfolio": {
      "commentingSystem": {
        "name": "Система Комментариев",
        "description": {
          "a": "Добавил возможность добавлять комментарии и отвечать на их через форму ввода с валидацией длины",
          "b": "Механизм изменения рейтинга комментариев и ответов реализован с использованием кнопок 'Like' и 'Dislike'.",
          "c": "Добавил функционал добавления комментариев и ответов в избранное с возможностью отмены действия.",
          "d": "Поддерживаю сортировку комментариев по различным параметрам: дате, рейтингу, количеству ответов.",
          "e": "Мой код основан на TypeScript и ES6-классах, при этом я стремился соблюдать принципы DRY и KISS.",
          "f": "Для стилизации пользовательского интерфейса использую SCSS, а для сборки проекта и управления зависимостями - Webpack.",
          "g": "Применяю методологию БЭМ для организации HTML и CSS кода, обеспечивая модульность и читаемость стилей и компонентов."
        
        }
      },
      "dataTable": {
        "name": "Таблица данных(React)",
        "description": {
          "a": "React и функциональные компоненты для чистого и компактного кода.",
          "b": "Верстка соответствует макету, использование стандартных SCSS правил и styled-components для стилизации.",
          "c": "Кастомизация елементов библиотеки  Ant Design для создания удобного интерфейса.",
          "d": "Возможность выбора между дневной и ночной темой через useContext.",
          "e": "Работа с различными типами данных: текстовыми, числовыми, выпадающим списком и чекбоксами с соответствующими компонентами.",
          "f": "Сложность заключалась в реализации тем(день/ночь). Решил с помощью styled-components, useState и useContext "
        }
      },
      "snake": {
        "name": "Змейка(Игра)",
        "description": {
          "a": "Использование элемента <canvas> для создания игрового поля.",
          "b": "HTML и CSS для основной структуры и визуального оформления",
          "c": "JavaScript для управления логикой и визуализацией игры.",
          "d": "Добавлен функционал для настройки скорости змейки c помощью JavaScript",
          "e": "Использование локального хранилища браузера для сохранения имени игрока и лучшего результата",
          "f": "Сложность возникла с управлением жизненного цикла игры. Решение было таким. Функция run() отвечает за начало игры. Запускает таймер обратного отсчета перед началом игры и вызывает функцию gameLoop() после завершения обратного отсчета. Функция gameLoop() основной игровой цикл, который обновляет и отображает игровые элементы с определенной частотой. gameLoop() использует requestAnimationFrame для повторного вызова себя и обновления состояния игры. Обработчики событий клавиатуры реагируют на нажатия клавиш и изменяют направление движения змейки."
        }
      },
      "designProject": {
        "name": "Студия дизайна интерьера",
        "description": {
          "a": "Верстка выполнена в соответствии с макетом из Figma, а для стилизации элементов использовал SCSS",
          "b": "Создал формы для ввода данных и отправки на сервер",
          "c": "Для обеспечения адаптивности сайта использовал семантические теги и медиа-запросы.",
          "d": "Реализовал слайдер для фотографий и информации на JavaScript",
          "e": "При создании слайдера на JavaScript возникали трудности с управлением перемещением слайдов, синхронизацией элементов и обработкой событий нажатия. Я использовал методы работы с DOM, CSS свойство transform для анимации, массивы и циклы для управления элементами и обработчики событий для навигации"
        }
      },
      "chart": {
        "name": "Диаграмма (React)",
        "description": {
          "a": "Функциональные компоненты в React: Улучшение модульности и читаемости кода.",
          "b": "Семантические теги в верстке: Повышение доступности сайта и улучшение SEO.",
          "c": "Интеграция SVG-графики: Добавление привлекательных визуальных элементов.",
          "d": "JavaScript и SVG для интерактивности: Улучшение пользовательского опыта и функциональности приложения."
        }
      },
      "youTalk": {
        "name": "YouTalk",
        "description": {
          "a": "При верстке проекта использовал макет Figma. Чистый CSS с применением техник, таких как гриды и флексбокс.",
          "b": "Использованию семантических тегов, таких как <header>, <nav>, <section>, <article>, <footer>, что бы код был понятен и легко читаемой как для разработчиков, так и для поисковых систем.",
          "c": "Использование гридов и флексбокса позволило мне создать адаптивную верстку. Использовал псевдоклассы, чтобы добавить интерактивные эффекты.",
          "d": "В результате моя верстка адаптирована под все устройства и предоставляетприятный и интуитивно понятный интерфейс."
        }
      },
      "link": "Ссылка на проект",
      "sectionLeft": {
        "photo": "Фото",
        "description": "Описание"
      }
    }
  },
  "footer": {
    "title": "Хотите узнать больше или просто пообщаться?",
    "button": "Отправить смс",
    "end": "Я также жду вас в своих социальных сетях."
  }
}